#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail fast and fail hard.
set -eo pipefail

BUILD_DIR=$1
CACHE_DIR=$2

mkdir -p $CACHE_DIR

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
OPT_DIR=$(cd "$BIN_DIR/../opt"; pwd)

if [ ! -e $CACHE_DIR/ghc ]; then
  echo "-----> Extracting GHC"
  tar xvzf $OPT_DIR/ghc.tar.gz -C $CACHE_DIR
fi

# Restore GHC registry if available
if [ -e $CACHE_DIR/dotghc ]; then
  rm -rf $HOME/.ghc
  mv $CACHE_DIR/dotghc $HOME/.ghc
fi

# Restore Cabal cache or download an empty environemt
if [ -e $CACHE_DIR/cabal ]; then
  rm -rf $HOME/.cabal
  mv $CACHE_DIR/cabal $HOME/.cabal
elif [ ! -e $HOME/.cabal ]; then
  echo "-----> Extracting Cabal"
  tar xvzf $OPT_DIR/cabal.tar.gz -C $HOME  
fi

mkdir -p $CACHE_DIR/lib
ln -fs /usr/lib/libgmp.so.3 $CACHE_DIR/lib/libgmp.so

# GHC has shell scripts with a bunch of hardcoded references to
# /home/vagrant/ghc/*
#
# Let's murder it to death.
find $CACHE_DIR/ghc -type f -print0 | xargs -0 perl -i -p -e  "s{/home/vagrant/ghc}{$CACHE_DIR/ghc}g"

PATH=$CACHE_DIR/ghc/bin:$PATH

echo "-----> Setting up ghc-pkg"
ghc-pkg recache
ghc-pkg describe base > base.conf

sed -i "s#ld-options:#ld-options: -L$CACHE_DIR/lib#" base.conf
perl -i -p -e  "s{/home/vagrant/ghc}{$CACHE_DIR/ghc}g" base.conf
ghc-pkg update base.conf
rm base.conf

ghc-pkg recache
ghc-pkg check

export PATH=$HOME/.cabal/bin:$PATH

echo "-----> Updating Cabal"
cabal update

echo "-----> Release the hounds! Installing application"
cd $BUILD_DIR
# the ld library path hack is horrible, but let's see if it helps
LD_LIBRARY_PATH=$CACHE_DIR/lib cabal install -j5 --disable-library-profiling --disable-executable-profiling --disable-shared

echo "-----> Caching Cabal packages"
shopt -s extglob
rm $HOME/.cabal/bin/!(cabal|happy)
mv $HOME/.cabal $CACHE_DIR/cabal
mv $HOME/.ghc $CACHE_DIR/dotghc

echo "Cache dir size:"
du -ms $CACHE_DIR
echo "Build dir size:"
du -ms $BUILD_DIR
